// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing the Carpenter component should render banner text correctly with given strings 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Carpenter
    list={
      Array [
        "one",
        "two",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <SearchByName
        workersList={Array []}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "workersList": Array [],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <SearchByName
          workersList={Array []}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "workersList": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the Carpenter component should render correctly in "debug" mode 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Carpenter
    debug={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <SearchByName
        workersList={Array []}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "workersList": Array [],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <SearchByName
          workersList={Array []}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "workersList": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the Carpenter component should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Carpenter />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <SearchByName
        workersList={Array []}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "workersList": Array [],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <SearchByName
          workersList={Array []}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "workersList": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the NavBar component should render banner text correctly with given strings 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavBar
    list={
      Array [
        "one",
        "two",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div>
        <Uncontrolled(Navbar)
          bsStyle="default"
          collapseOnSelect={true}
          inverse={true}
        >
          <NavbarHeader>
            <NavbarBrand>
              <a
                href="/"
              >
                HomerG
              </a>
            </NavbarBrand>
          </NavbarHeader>
          <NavbarCollapse>
            <Nav
              bsClass="nav"
              justified={false}
              pullLeft={false}
              pullRight={false}
              stacked={false}
            >
              <NavItem
                active={false}
                disabled={false}
                eventKey={1}
                href="/contact"
              >
                Contact Us
              </NavItem>
              <NavItem
                active={false}
                disabled={false}
                eventKey={2}
                href="/about"
              >
                About
              </NavItem>
            </Nav>
            <NavbarForm
              componentClass="div"
              pullLeft={true}
              pullRight={false}
            >
              <FormGroup
                bsClass="form-group"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  id="textInbox"
                  onChange={[Function]}
                  onKeyUp={[Function]}
                  placeholder="Worker name"
                  type="text"
                />
              </FormGroup>
               
              <Link
                replace={false}
                to="/search"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  id="myBtn"
                  onClick={[Function]}
                >
                  Search
                </Button>
              </Link>
            </NavbarForm>
            <Nav
              bsClass="nav"
              justified={false}
              pullLeft={false}
              pullRight={true}
              stacked={false}
            >
              <NavItem
                active={false}
                disabled={false}
                href="#"
              >
                <div>
                   
                  <WorkersLogo />
                   
                </div>
              </NavItem>
            </Nav>
          </NavbarCollapse>
        </Uncontrolled(Navbar)>
        <Route
          component={[Function]}
          path="/search"
        />
        <Route
          component={[Function]}
          path="/contact"
        />
        <Route
          component={[Function]}
          path="/about"
        />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Uncontrolled(Navbar)
            bsStyle="default"
            collapseOnSelect={true}
            inverse={true}
          >
            <NavbarHeader>
              <NavbarBrand>
                <a
                  href="/"
                >
                  HomerG
                </a>
              </NavbarBrand>
            </NavbarHeader>
            <NavbarCollapse>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={false}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={1}
                  href="/contact"
                >
                  Contact Us
                </NavItem>
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={2}
                  href="/about"
                >
                  About
                </NavItem>
              </Nav>
              <NavbarForm
                componentClass="div"
                pullLeft={true}
                pullRight={false}
              >
                <FormGroup
                  bsClass="form-group"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    id="textInbox"
                    onChange={[Function]}
                    onKeyUp={[Function]}
                    placeholder="Worker name"
                    type="text"
                  />
                </FormGroup>
                 
                <Link
                  replace={false}
                  to="/search"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    id="myBtn"
                    onClick={[Function]}
                  >
                    Search
                  </Button>
                </Link>
              </NavbarForm>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={true}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  href="#"
                >
                  <div>
                     
                    <WorkersLogo />
                     
                  </div>
                </NavItem>
              </Nav>
            </NavbarCollapse>
          </Uncontrolled(Navbar)>,
          <Route
            component={[Function]}
            path="/search"
          />,
          <Route
            component={[Function]}
            path="/contact"
          />,
          <Route
            component={[Function]}
            path="/about"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsStyle": "default",
            "children": Array [
              <NavbarHeader>
                <NavbarBrand>
                  <a
                    href="/"
                  >
                    HomerG
                  </a>
                </NavbarBrand>
              </NavbarHeader>,
              <NavbarCollapse>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={1}
                    href="/contact"
                  >
                    Contact Us
                  </NavItem>
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={2}
                    href="/about"
                  >
                    About
                  </NavItem>
                </Nav>
                <NavbarForm
                  componentClass="div"
                  pullLeft={true}
                  pullRight={false}
                >
                  <FormGroup
                    bsClass="form-group"
                  >
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      id="textInbox"
                      onChange={[Function]}
                      onKeyUp={[Function]}
                      placeholder="Worker name"
                      type="text"
                    />
                  </FormGroup>
                   
                  <Link
                    replace={false}
                    to="/search"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="myBtn"
                      onClick={[Function]}
                    >
                      Search
                    </Button>
                  </Link>
                </NavbarForm>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={true}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    href="#"
                  >
                    <div>
                       
                      <WorkersLogo />
                       
                    </div>
                  </NavItem>
                </Nav>
              </NavbarCollapse>,
            ],
            "collapseOnSelect": true,
            "inverse": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <NavbarBrand>
                  <a
                    href="/"
                  >
                    HomerG
                  </a>
                </NavbarBrand>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <a
                    href="/"
                  >
                    HomerG
                  </a>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "HomerG",
                    "href": "/",
                  },
                  "ref": null,
                  "rendered": "HomerG",
                  "type": "a",
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={false}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={1}
                      href="/contact"
                    >
                      Contact Us
                    </NavItem>
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={2}
                      href="/about"
                    >
                      About
                    </NavItem>
                  </Nav>,
                  <NavbarForm
                    componentClass="div"
                    pullLeft={true}
                    pullRight={false}
                  >
                    <FormGroup
                      bsClass="form-group"
                    >
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        id="textInbox"
                        onChange={[Function]}
                        onKeyUp={[Function]}
                        placeholder="Worker name"
                        type="text"
                      />
                    </FormGroup>
                     
                    <Link
                      replace={false}
                      to="/search"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        disabled={false}
                        id="myBtn"
                        onClick={[Function]}
                      >
                        Search
                      </Button>
                    </Link>
                  </NavbarForm>,
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={true}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      href="#"
                    >
                      <div>
                         
                        <WorkersLogo />
                         
                      </div>
                    </NavItem>
                  </Nav>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "nav",
                    "children": Array [
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={1}
                        href="/contact"
                      >
                        Contact Us
                      </NavItem>,
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={2}
                        href="/about"
                      >
                        About
                      </NavItem>,
                    ],
                    "justified": false,
                    "pullLeft": false,
                    "pullRight": false,
                    "stacked": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "children": "Contact Us",
                        "disabled": false,
                        "eventKey": 1,
                        "href": "/contact",
                      },
                      "ref": null,
                      "rendered": "Contact Us",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "children": "About",
                        "disabled": false,
                        "eventKey": 2,
                        "href": "/about",
                      },
                      "ref": null,
                      "rendered": "About",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <FormGroup
                        bsClass="form-group"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          id="textInbox"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Worker name"
                          type="text"
                        />
                      </FormGroup>,
                      " ",
                      <Link
                        replace={false}
                        to="/search"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                          id="myBtn"
                          onClick={[Function]}
                        >
                          Search
                        </Button>
                      </Link>,
                    ],
                    "componentClass": "div",
                    "pullLeft": true,
                    "pullRight": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "form-group",
                        "children": <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          id="textInbox"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Worker name"
                          type="text"
                        />,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-control",
                          "componentClass": "input",
                          "id": "textInbox",
                          "onChange": [Function],
                          "onKeyUp": [Function],
                          "placeholder": "Worker name",
                          "type": "text",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                          id="myBtn"
                          onClick={[Function]}
                        >
                          Search
                        </Button>,
                        "replace": false,
                        "to": "/search",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "block": false,
                          "bsClass": "btn",
                          "bsStyle": "default",
                          "children": "Search",
                          "disabled": false,
                          "id": "myBtn",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Search",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "nav",
                    "children": <NavItem
                      active={false}
                      disabled={false}
                      href="#"
                    >
                      <div>
                         
                        <WorkersLogo />
                         
                      </div>
                    </NavItem>,
                    "justified": false,
                    "pullLeft": false,
                    "pullRight": true,
                    "stacked": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "children": <div>
                         
                        <WorkersLogo />
                         
                      </div>,
                      "disabled": false,
                      "href": "#",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          " ",
                          <WorkersLogo />,
                          " ",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "handleWorkersButton": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        " ",
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/search",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/contact",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/about",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div>
          <Uncontrolled(Navbar)
            bsStyle="default"
            collapseOnSelect={true}
            inverse={true}
          >
            <NavbarHeader>
              <NavbarBrand>
                <a
                  href="/"
                >
                  HomerG
                </a>
              </NavbarBrand>
            </NavbarHeader>
            <NavbarCollapse>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={false}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={1}
                  href="/contact"
                >
                  Contact Us
                </NavItem>
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={2}
                  href="/about"
                >
                  About
                </NavItem>
              </Nav>
              <NavbarForm
                componentClass="div"
                pullLeft={true}
                pullRight={false}
              >
                <FormGroup
                  bsClass="form-group"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    id="textInbox"
                    onChange={[Function]}
                    onKeyUp={[Function]}
                    placeholder="Worker name"
                    type="text"
                  />
                </FormGroup>
                 
                <Link
                  replace={false}
                  to="/search"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    id="myBtn"
                    onClick={[Function]}
                  >
                    Search
                  </Button>
                </Link>
              </NavbarForm>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={true}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  href="#"
                >
                  <div>
                     
                    <WorkersLogo />
                     
                  </div>
                </NavItem>
              </Nav>
            </NavbarCollapse>
          </Uncontrolled(Navbar)>
          <Route
            component={[Function]}
            path="/search"
          />
          <Route
            component={[Function]}
            path="/contact"
          />
          <Route
            component={[Function]}
            path="/about"
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Uncontrolled(Navbar)
              bsStyle="default"
              collapseOnSelect={true}
              inverse={true}
            >
              <NavbarHeader>
                <NavbarBrand>
                  <a
                    href="/"
                  >
                    HomerG
                  </a>
                </NavbarBrand>
              </NavbarHeader>
              <NavbarCollapse>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={1}
                    href="/contact"
                  >
                    Contact Us
                  </NavItem>
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={2}
                    href="/about"
                  >
                    About
                  </NavItem>
                </Nav>
                <NavbarForm
                  componentClass="div"
                  pullLeft={true}
                  pullRight={false}
                >
                  <FormGroup
                    bsClass="form-group"
                  >
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      id="textInbox"
                      onChange={[Function]}
                      onKeyUp={[Function]}
                      placeholder="Worker name"
                      type="text"
                    />
                  </FormGroup>
                   
                  <Link
                    replace={false}
                    to="/search"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="myBtn"
                      onClick={[Function]}
                    >
                      Search
                    </Button>
                  </Link>
                </NavbarForm>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={true}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    href="#"
                  >
                    <div>
                       
                      <WorkersLogo />
                       
                    </div>
                  </NavItem>
                </Nav>
              </NavbarCollapse>
            </Uncontrolled(Navbar)>,
            <Route
              component={[Function]}
              path="/search"
            />,
            <Route
              component={[Function]}
              path="/contact"
            />,
            <Route
              component={[Function]}
              path="/about"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsStyle": "default",
              "children": Array [
                <NavbarHeader>
                  <NavbarBrand>
                    <a
                      href="/"
                    >
                      HomerG
                    </a>
                  </NavbarBrand>
                </NavbarHeader>,
                <NavbarCollapse>
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={false}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={1}
                      href="/contact"
                    >
                      Contact Us
                    </NavItem>
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={2}
                      href="/about"
                    >
                      About
                    </NavItem>
                  </Nav>
                  <NavbarForm
                    componentClass="div"
                    pullLeft={true}
                    pullRight={false}
                  >
                    <FormGroup
                      bsClass="form-group"
                    >
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        id="textInbox"
                        onChange={[Function]}
                        onKeyUp={[Function]}
                        placeholder="Worker name"
                        type="text"
                      />
                    </FormGroup>
                     
                    <Link
                      replace={false}
                      to="/search"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        disabled={false}
                        id="myBtn"
                        onClick={[Function]}
                      >
                        Search
                      </Button>
                    </Link>
                  </NavbarForm>
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={true}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      href="#"
                    >
                      <div>
                         
                        <WorkersLogo />
                         
                      </div>
                    </NavItem>
                  </Nav>
                </NavbarCollapse>,
              ],
              "collapseOnSelect": true,
              "inverse": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <NavbarBrand>
                    <a
                      href="/"
                    >
                      HomerG
                    </a>
                  </NavbarBrand>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <a
                      href="/"
                    >
                      HomerG
                    </a>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "HomerG",
                      "href": "/",
                    },
                    "ref": null,
                    "rendered": "HomerG",
                    "type": "a",
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Nav
                      bsClass="nav"
                      justified={false}
                      pullLeft={false}
                      pullRight={false}
                      stacked={false}
                    >
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={1}
                        href="/contact"
                      >
                        Contact Us
                      </NavItem>
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={2}
                        href="/about"
                      >
                        About
                      </NavItem>
                    </Nav>,
                    <NavbarForm
                      componentClass="div"
                      pullLeft={true}
                      pullRight={false}
                    >
                      <FormGroup
                        bsClass="form-group"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          id="textInbox"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Worker name"
                          type="text"
                        />
                      </FormGroup>
                       
                      <Link
                        replace={false}
                        to="/search"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                          id="myBtn"
                          onClick={[Function]}
                        >
                          Search
                        </Button>
                      </Link>
                    </NavbarForm>,
                    <Nav
                      bsClass="nav"
                      justified={false}
                      pullLeft={false}
                      pullRight={true}
                      stacked={false}
                    >
                      <NavItem
                        active={false}
                        disabled={false}
                        href="#"
                      >
                        <div>
                           
                          <WorkersLogo />
                           
                        </div>
                      </NavItem>
                    </Nav>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "nav",
                      "children": Array [
                        <NavItem
                          active={false}
                          disabled={false}
                          eventKey={1}
                          href="/contact"
                        >
                          Contact Us
                        </NavItem>,
                        <NavItem
                          active={false}
                          disabled={false}
                          eventKey={2}
                          href="/about"
                        >
                          About
                        </NavItem>,
                      ],
                      "justified": false,
                      "pullLeft": false,
                      "pullRight": false,
                      "stacked": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "children": "Contact Us",
                          "disabled": false,
                          "eventKey": 1,
                          "href": "/contact",
                        },
                        "ref": null,
                        "rendered": "Contact Us",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "children": "About",
                          "disabled": false,
                          "eventKey": 2,
                          "href": "/about",
                        },
                        "ref": null,
                        "rendered": "About",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <FormGroup
                          bsClass="form-group"
                        >
                          <FormControl
                            bsClass="form-control"
                            componentClass="input"
                            id="textInbox"
                            onChange={[Function]}
                            onKeyUp={[Function]}
                            placeholder="Worker name"
                            type="text"
                          />
                        </FormGroup>,
                        " ",
                        <Link
                          replace={false}
                          to="/search"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                            id="myBtn"
                            onClick={[Function]}
                          >
                            Search
                          </Button>
                        </Link>,
                      ],
                      "componentClass": "div",
                      "pullLeft": true,
                      "pullRight": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-group",
                          "children": <FormControl
                            bsClass="form-control"
                            componentClass="input"
                            id="textInbox"
                            onChange={[Function]}
                            onKeyUp={[Function]}
                            placeholder="Worker name"
                            type="text"
                          />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "bsClass": "form-control",
                            "componentClass": "input",
                            "id": "textInbox",
                            "onChange": [Function],
                            "onKeyUp": [Function],
                            "placeholder": "Worker name",
                            "type": "text",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                            id="myBtn"
                            onClick={[Function]}
                          >
                            Search
                          </Button>,
                          "replace": false,
                          "to": "/search",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "active": false,
                            "block": false,
                            "bsClass": "btn",
                            "bsStyle": "default",
                            "children": "Search",
                            "disabled": false,
                            "id": "myBtn",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": "Search",
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "nav",
                      "children": <NavItem
                        active={false}
                        disabled={false}
                        href="#"
                      >
                        <div>
                           
                          <WorkersLogo />
                           
                        </div>
                      </NavItem>,
                      "justified": false,
                      "pullLeft": false,
                      "pullRight": true,
                      "stacked": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "children": <div>
                           
                          <WorkersLogo />
                           
                        </div>,
                        "disabled": false,
                        "href": "#",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            " ",
                            <WorkersLogo />,
                            " ",
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          " ",
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "handleWorkersButton": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          " ",
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/search",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/contact",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/about",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the NavBar component should render correctly in "debug" mode 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavBar
    debug={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div>
        <Uncontrolled(Navbar)
          bsStyle="default"
          collapseOnSelect={true}
          inverse={true}
        >
          <NavbarHeader>
            <NavbarBrand>
              <a
                href="/"
              >
                HomerG
              </a>
            </NavbarBrand>
          </NavbarHeader>
          <NavbarCollapse>
            <Nav
              bsClass="nav"
              justified={false}
              pullLeft={false}
              pullRight={false}
              stacked={false}
            >
              <NavItem
                active={false}
                disabled={false}
                eventKey={1}
                href="/contact"
              >
                Contact Us
              </NavItem>
              <NavItem
                active={false}
                disabled={false}
                eventKey={2}
                href="/about"
              >
                About
              </NavItem>
            </Nav>
            <NavbarForm
              componentClass="div"
              pullLeft={true}
              pullRight={false}
            >
              <FormGroup
                bsClass="form-group"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  id="textInbox"
                  onChange={[Function]}
                  onKeyUp={[Function]}
                  placeholder="Worker name"
                  type="text"
                />
              </FormGroup>
               
              <Link
                replace={false}
                to="/search"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  id="myBtn"
                  onClick={[Function]}
                >
                  Search
                </Button>
              </Link>
            </NavbarForm>
            <Nav
              bsClass="nav"
              justified={false}
              pullLeft={false}
              pullRight={true}
              stacked={false}
            >
              <NavItem
                active={false}
                disabled={false}
                href="#"
              >
                <div>
                   
                  <WorkersLogo />
                   
                </div>
              </NavItem>
            </Nav>
          </NavbarCollapse>
        </Uncontrolled(Navbar)>
        <Route
          component={[Function]}
          path="/search"
        />
        <Route
          component={[Function]}
          path="/contact"
        />
        <Route
          component={[Function]}
          path="/about"
        />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Uncontrolled(Navbar)
            bsStyle="default"
            collapseOnSelect={true}
            inverse={true}
          >
            <NavbarHeader>
              <NavbarBrand>
                <a
                  href="/"
                >
                  HomerG
                </a>
              </NavbarBrand>
            </NavbarHeader>
            <NavbarCollapse>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={false}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={1}
                  href="/contact"
                >
                  Contact Us
                </NavItem>
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={2}
                  href="/about"
                >
                  About
                </NavItem>
              </Nav>
              <NavbarForm
                componentClass="div"
                pullLeft={true}
                pullRight={false}
              >
                <FormGroup
                  bsClass="form-group"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    id="textInbox"
                    onChange={[Function]}
                    onKeyUp={[Function]}
                    placeholder="Worker name"
                    type="text"
                  />
                </FormGroup>
                 
                <Link
                  replace={false}
                  to="/search"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    id="myBtn"
                    onClick={[Function]}
                  >
                    Search
                  </Button>
                </Link>
              </NavbarForm>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={true}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  href="#"
                >
                  <div>
                     
                    <WorkersLogo />
                     
                  </div>
                </NavItem>
              </Nav>
            </NavbarCollapse>
          </Uncontrolled(Navbar)>,
          <Route
            component={[Function]}
            path="/search"
          />,
          <Route
            component={[Function]}
            path="/contact"
          />,
          <Route
            component={[Function]}
            path="/about"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsStyle": "default",
            "children": Array [
              <NavbarHeader>
                <NavbarBrand>
                  <a
                    href="/"
                  >
                    HomerG
                  </a>
                </NavbarBrand>
              </NavbarHeader>,
              <NavbarCollapse>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={1}
                    href="/contact"
                  >
                    Contact Us
                  </NavItem>
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={2}
                    href="/about"
                  >
                    About
                  </NavItem>
                </Nav>
                <NavbarForm
                  componentClass="div"
                  pullLeft={true}
                  pullRight={false}
                >
                  <FormGroup
                    bsClass="form-group"
                  >
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      id="textInbox"
                      onChange={[Function]}
                      onKeyUp={[Function]}
                      placeholder="Worker name"
                      type="text"
                    />
                  </FormGroup>
                   
                  <Link
                    replace={false}
                    to="/search"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="myBtn"
                      onClick={[Function]}
                    >
                      Search
                    </Button>
                  </Link>
                </NavbarForm>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={true}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    href="#"
                  >
                    <div>
                       
                      <WorkersLogo />
                       
                    </div>
                  </NavItem>
                </Nav>
              </NavbarCollapse>,
            ],
            "collapseOnSelect": true,
            "inverse": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <NavbarBrand>
                  <a
                    href="/"
                  >
                    HomerG
                  </a>
                </NavbarBrand>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <a
                    href="/"
                  >
                    HomerG
                  </a>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "HomerG",
                    "href": "/",
                  },
                  "ref": null,
                  "rendered": "HomerG",
                  "type": "a",
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={false}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={1}
                      href="/contact"
                    >
                      Contact Us
                    </NavItem>
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={2}
                      href="/about"
                    >
                      About
                    </NavItem>
                  </Nav>,
                  <NavbarForm
                    componentClass="div"
                    pullLeft={true}
                    pullRight={false}
                  >
                    <FormGroup
                      bsClass="form-group"
                    >
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        id="textInbox"
                        onChange={[Function]}
                        onKeyUp={[Function]}
                        placeholder="Worker name"
                        type="text"
                      />
                    </FormGroup>
                     
                    <Link
                      replace={false}
                      to="/search"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        disabled={false}
                        id="myBtn"
                        onClick={[Function]}
                      >
                        Search
                      </Button>
                    </Link>
                  </NavbarForm>,
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={true}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      href="#"
                    >
                      <div>
                         
                        <WorkersLogo />
                         
                      </div>
                    </NavItem>
                  </Nav>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "nav",
                    "children": Array [
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={1}
                        href="/contact"
                      >
                        Contact Us
                      </NavItem>,
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={2}
                        href="/about"
                      >
                        About
                      </NavItem>,
                    ],
                    "justified": false,
                    "pullLeft": false,
                    "pullRight": false,
                    "stacked": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "children": "Contact Us",
                        "disabled": false,
                        "eventKey": 1,
                        "href": "/contact",
                      },
                      "ref": null,
                      "rendered": "Contact Us",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "children": "About",
                        "disabled": false,
                        "eventKey": 2,
                        "href": "/about",
                      },
                      "ref": null,
                      "rendered": "About",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <FormGroup
                        bsClass="form-group"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          id="textInbox"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Worker name"
                          type="text"
                        />
                      </FormGroup>,
                      " ",
                      <Link
                        replace={false}
                        to="/search"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                          id="myBtn"
                          onClick={[Function]}
                        >
                          Search
                        </Button>
                      </Link>,
                    ],
                    "componentClass": "div",
                    "pullLeft": true,
                    "pullRight": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "form-group",
                        "children": <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          id="textInbox"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Worker name"
                          type="text"
                        />,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-control",
                          "componentClass": "input",
                          "id": "textInbox",
                          "onChange": [Function],
                          "onKeyUp": [Function],
                          "placeholder": "Worker name",
                          "type": "text",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                          id="myBtn"
                          onClick={[Function]}
                        >
                          Search
                        </Button>,
                        "replace": false,
                        "to": "/search",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "block": false,
                          "bsClass": "btn",
                          "bsStyle": "default",
                          "children": "Search",
                          "disabled": false,
                          "id": "myBtn",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Search",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "nav",
                    "children": <NavItem
                      active={false}
                      disabled={false}
                      href="#"
                    >
                      <div>
                         
                        <WorkersLogo />
                         
                      </div>
                    </NavItem>,
                    "justified": false,
                    "pullLeft": false,
                    "pullRight": true,
                    "stacked": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "children": <div>
                         
                        <WorkersLogo />
                         
                      </div>,
                      "disabled": false,
                      "href": "#",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          " ",
                          <WorkersLogo />,
                          " ",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "handleWorkersButton": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        " ",
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/search",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/contact",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/about",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div>
          <Uncontrolled(Navbar)
            bsStyle="default"
            collapseOnSelect={true}
            inverse={true}
          >
            <NavbarHeader>
              <NavbarBrand>
                <a
                  href="/"
                >
                  HomerG
                </a>
              </NavbarBrand>
            </NavbarHeader>
            <NavbarCollapse>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={false}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={1}
                  href="/contact"
                >
                  Contact Us
                </NavItem>
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={2}
                  href="/about"
                >
                  About
                </NavItem>
              </Nav>
              <NavbarForm
                componentClass="div"
                pullLeft={true}
                pullRight={false}
              >
                <FormGroup
                  bsClass="form-group"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    id="textInbox"
                    onChange={[Function]}
                    onKeyUp={[Function]}
                    placeholder="Worker name"
                    type="text"
                  />
                </FormGroup>
                 
                <Link
                  replace={false}
                  to="/search"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    id="myBtn"
                    onClick={[Function]}
                  >
                    Search
                  </Button>
                </Link>
              </NavbarForm>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={true}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  href="#"
                >
                  <div>
                     
                    <WorkersLogo />
                     
                  </div>
                </NavItem>
              </Nav>
            </NavbarCollapse>
          </Uncontrolled(Navbar)>
          <Route
            component={[Function]}
            path="/search"
          />
          <Route
            component={[Function]}
            path="/contact"
          />
          <Route
            component={[Function]}
            path="/about"
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Uncontrolled(Navbar)
              bsStyle="default"
              collapseOnSelect={true}
              inverse={true}
            >
              <NavbarHeader>
                <NavbarBrand>
                  <a
                    href="/"
                  >
                    HomerG
                  </a>
                </NavbarBrand>
              </NavbarHeader>
              <NavbarCollapse>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={1}
                    href="/contact"
                  >
                    Contact Us
                  </NavItem>
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={2}
                    href="/about"
                  >
                    About
                  </NavItem>
                </Nav>
                <NavbarForm
                  componentClass="div"
                  pullLeft={true}
                  pullRight={false}
                >
                  <FormGroup
                    bsClass="form-group"
                  >
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      id="textInbox"
                      onChange={[Function]}
                      onKeyUp={[Function]}
                      placeholder="Worker name"
                      type="text"
                    />
                  </FormGroup>
                   
                  <Link
                    replace={false}
                    to="/search"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="myBtn"
                      onClick={[Function]}
                    >
                      Search
                    </Button>
                  </Link>
                </NavbarForm>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={true}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    href="#"
                  >
                    <div>
                       
                      <WorkersLogo />
                       
                    </div>
                  </NavItem>
                </Nav>
              </NavbarCollapse>
            </Uncontrolled(Navbar)>,
            <Route
              component={[Function]}
              path="/search"
            />,
            <Route
              component={[Function]}
              path="/contact"
            />,
            <Route
              component={[Function]}
              path="/about"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsStyle": "default",
              "children": Array [
                <NavbarHeader>
                  <NavbarBrand>
                    <a
                      href="/"
                    >
                      HomerG
                    </a>
                  </NavbarBrand>
                </NavbarHeader>,
                <NavbarCollapse>
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={false}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={1}
                      href="/contact"
                    >
                      Contact Us
                    </NavItem>
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={2}
                      href="/about"
                    >
                      About
                    </NavItem>
                  </Nav>
                  <NavbarForm
                    componentClass="div"
                    pullLeft={true}
                    pullRight={false}
                  >
                    <FormGroup
                      bsClass="form-group"
                    >
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        id="textInbox"
                        onChange={[Function]}
                        onKeyUp={[Function]}
                        placeholder="Worker name"
                        type="text"
                      />
                    </FormGroup>
                     
                    <Link
                      replace={false}
                      to="/search"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        disabled={false}
                        id="myBtn"
                        onClick={[Function]}
                      >
                        Search
                      </Button>
                    </Link>
                  </NavbarForm>
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={true}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      href="#"
                    >
                      <div>
                         
                        <WorkersLogo />
                         
                      </div>
                    </NavItem>
                  </Nav>
                </NavbarCollapse>,
              ],
              "collapseOnSelect": true,
              "inverse": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <NavbarBrand>
                    <a
                      href="/"
                    >
                      HomerG
                    </a>
                  </NavbarBrand>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <a
                      href="/"
                    >
                      HomerG
                    </a>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "HomerG",
                      "href": "/",
                    },
                    "ref": null,
                    "rendered": "HomerG",
                    "type": "a",
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Nav
                      bsClass="nav"
                      justified={false}
                      pullLeft={false}
                      pullRight={false}
                      stacked={false}
                    >
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={1}
                        href="/contact"
                      >
                        Contact Us
                      </NavItem>
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={2}
                        href="/about"
                      >
                        About
                      </NavItem>
                    </Nav>,
                    <NavbarForm
                      componentClass="div"
                      pullLeft={true}
                      pullRight={false}
                    >
                      <FormGroup
                        bsClass="form-group"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          id="textInbox"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Worker name"
                          type="text"
                        />
                      </FormGroup>
                       
                      <Link
                        replace={false}
                        to="/search"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                          id="myBtn"
                          onClick={[Function]}
                        >
                          Search
                        </Button>
                      </Link>
                    </NavbarForm>,
                    <Nav
                      bsClass="nav"
                      justified={false}
                      pullLeft={false}
                      pullRight={true}
                      stacked={false}
                    >
                      <NavItem
                        active={false}
                        disabled={false}
                        href="#"
                      >
                        <div>
                           
                          <WorkersLogo />
                           
                        </div>
                      </NavItem>
                    </Nav>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "nav",
                      "children": Array [
                        <NavItem
                          active={false}
                          disabled={false}
                          eventKey={1}
                          href="/contact"
                        >
                          Contact Us
                        </NavItem>,
                        <NavItem
                          active={false}
                          disabled={false}
                          eventKey={2}
                          href="/about"
                        >
                          About
                        </NavItem>,
                      ],
                      "justified": false,
                      "pullLeft": false,
                      "pullRight": false,
                      "stacked": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "children": "Contact Us",
                          "disabled": false,
                          "eventKey": 1,
                          "href": "/contact",
                        },
                        "ref": null,
                        "rendered": "Contact Us",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "children": "About",
                          "disabled": false,
                          "eventKey": 2,
                          "href": "/about",
                        },
                        "ref": null,
                        "rendered": "About",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <FormGroup
                          bsClass="form-group"
                        >
                          <FormControl
                            bsClass="form-control"
                            componentClass="input"
                            id="textInbox"
                            onChange={[Function]}
                            onKeyUp={[Function]}
                            placeholder="Worker name"
                            type="text"
                          />
                        </FormGroup>,
                        " ",
                        <Link
                          replace={false}
                          to="/search"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                            id="myBtn"
                            onClick={[Function]}
                          >
                            Search
                          </Button>
                        </Link>,
                      ],
                      "componentClass": "div",
                      "pullLeft": true,
                      "pullRight": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-group",
                          "children": <FormControl
                            bsClass="form-control"
                            componentClass="input"
                            id="textInbox"
                            onChange={[Function]}
                            onKeyUp={[Function]}
                            placeholder="Worker name"
                            type="text"
                          />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "bsClass": "form-control",
                            "componentClass": "input",
                            "id": "textInbox",
                            "onChange": [Function],
                            "onKeyUp": [Function],
                            "placeholder": "Worker name",
                            "type": "text",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                            id="myBtn"
                            onClick={[Function]}
                          >
                            Search
                          </Button>,
                          "replace": false,
                          "to": "/search",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "active": false,
                            "block": false,
                            "bsClass": "btn",
                            "bsStyle": "default",
                            "children": "Search",
                            "disabled": false,
                            "id": "myBtn",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": "Search",
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "nav",
                      "children": <NavItem
                        active={false}
                        disabled={false}
                        href="#"
                      >
                        <div>
                           
                          <WorkersLogo />
                           
                        </div>
                      </NavItem>,
                      "justified": false,
                      "pullLeft": false,
                      "pullRight": true,
                      "stacked": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "children": <div>
                           
                          <WorkersLogo />
                           
                        </div>,
                        "disabled": false,
                        "href": "#",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            " ",
                            <WorkersLogo />,
                            " ",
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          " ",
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "handleWorkersButton": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          " ",
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/search",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/contact",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/about",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the NavBar component should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavBar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div>
        <Uncontrolled(Navbar)
          bsStyle="default"
          collapseOnSelect={true}
          inverse={true}
        >
          <NavbarHeader>
            <NavbarBrand>
              <a
                href="/"
              >
                HomerG
              </a>
            </NavbarBrand>
          </NavbarHeader>
          <NavbarCollapse>
            <Nav
              bsClass="nav"
              justified={false}
              pullLeft={false}
              pullRight={false}
              stacked={false}
            >
              <NavItem
                active={false}
                disabled={false}
                eventKey={1}
                href="/contact"
              >
                Contact Us
              </NavItem>
              <NavItem
                active={false}
                disabled={false}
                eventKey={2}
                href="/about"
              >
                About
              </NavItem>
            </Nav>
            <NavbarForm
              componentClass="div"
              pullLeft={true}
              pullRight={false}
            >
              <FormGroup
                bsClass="form-group"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  id="textInbox"
                  onChange={[Function]}
                  onKeyUp={[Function]}
                  placeholder="Worker name"
                  type="text"
                />
              </FormGroup>
               
              <Link
                replace={false}
                to="/search"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  id="myBtn"
                  onClick={[Function]}
                >
                  Search
                </Button>
              </Link>
            </NavbarForm>
            <Nav
              bsClass="nav"
              justified={false}
              pullLeft={false}
              pullRight={true}
              stacked={false}
            >
              <NavItem
                active={false}
                disabled={false}
                href="#"
              >
                <div>
                   
                  <WorkersLogo />
                   
                </div>
              </NavItem>
            </Nav>
          </NavbarCollapse>
        </Uncontrolled(Navbar)>
        <Route
          component={[Function]}
          path="/search"
        />
        <Route
          component={[Function]}
          path="/contact"
        />
        <Route
          component={[Function]}
          path="/about"
        />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Uncontrolled(Navbar)
            bsStyle="default"
            collapseOnSelect={true}
            inverse={true}
          >
            <NavbarHeader>
              <NavbarBrand>
                <a
                  href="/"
                >
                  HomerG
                </a>
              </NavbarBrand>
            </NavbarHeader>
            <NavbarCollapse>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={false}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={1}
                  href="/contact"
                >
                  Contact Us
                </NavItem>
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={2}
                  href="/about"
                >
                  About
                </NavItem>
              </Nav>
              <NavbarForm
                componentClass="div"
                pullLeft={true}
                pullRight={false}
              >
                <FormGroup
                  bsClass="form-group"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    id="textInbox"
                    onChange={[Function]}
                    onKeyUp={[Function]}
                    placeholder="Worker name"
                    type="text"
                  />
                </FormGroup>
                 
                <Link
                  replace={false}
                  to="/search"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    id="myBtn"
                    onClick={[Function]}
                  >
                    Search
                  </Button>
                </Link>
              </NavbarForm>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={true}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  href="#"
                >
                  <div>
                     
                    <WorkersLogo />
                     
                  </div>
                </NavItem>
              </Nav>
            </NavbarCollapse>
          </Uncontrolled(Navbar)>,
          <Route
            component={[Function]}
            path="/search"
          />,
          <Route
            component={[Function]}
            path="/contact"
          />,
          <Route
            component={[Function]}
            path="/about"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsStyle": "default",
            "children": Array [
              <NavbarHeader>
                <NavbarBrand>
                  <a
                    href="/"
                  >
                    HomerG
                  </a>
                </NavbarBrand>
              </NavbarHeader>,
              <NavbarCollapse>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={1}
                    href="/contact"
                  >
                    Contact Us
                  </NavItem>
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={2}
                    href="/about"
                  >
                    About
                  </NavItem>
                </Nav>
                <NavbarForm
                  componentClass="div"
                  pullLeft={true}
                  pullRight={false}
                >
                  <FormGroup
                    bsClass="form-group"
                  >
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      id="textInbox"
                      onChange={[Function]}
                      onKeyUp={[Function]}
                      placeholder="Worker name"
                      type="text"
                    />
                  </FormGroup>
                   
                  <Link
                    replace={false}
                    to="/search"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="myBtn"
                      onClick={[Function]}
                    >
                      Search
                    </Button>
                  </Link>
                </NavbarForm>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={true}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    href="#"
                  >
                    <div>
                       
                      <WorkersLogo />
                       
                    </div>
                  </NavItem>
                </Nav>
              </NavbarCollapse>,
            ],
            "collapseOnSelect": true,
            "inverse": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <NavbarBrand>
                  <a
                    href="/"
                  >
                    HomerG
                  </a>
                </NavbarBrand>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <a
                    href="/"
                  >
                    HomerG
                  </a>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "HomerG",
                    "href": "/",
                  },
                  "ref": null,
                  "rendered": "HomerG",
                  "type": "a",
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={false}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={1}
                      href="/contact"
                    >
                      Contact Us
                    </NavItem>
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={2}
                      href="/about"
                    >
                      About
                    </NavItem>
                  </Nav>,
                  <NavbarForm
                    componentClass="div"
                    pullLeft={true}
                    pullRight={false}
                  >
                    <FormGroup
                      bsClass="form-group"
                    >
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        id="textInbox"
                        onChange={[Function]}
                        onKeyUp={[Function]}
                        placeholder="Worker name"
                        type="text"
                      />
                    </FormGroup>
                     
                    <Link
                      replace={false}
                      to="/search"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        disabled={false}
                        id="myBtn"
                        onClick={[Function]}
                      >
                        Search
                      </Button>
                    </Link>
                  </NavbarForm>,
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={true}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      href="#"
                    >
                      <div>
                         
                        <WorkersLogo />
                         
                      </div>
                    </NavItem>
                  </Nav>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "nav",
                    "children": Array [
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={1}
                        href="/contact"
                      >
                        Contact Us
                      </NavItem>,
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={2}
                        href="/about"
                      >
                        About
                      </NavItem>,
                    ],
                    "justified": false,
                    "pullLeft": false,
                    "pullRight": false,
                    "stacked": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "children": "Contact Us",
                        "disabled": false,
                        "eventKey": 1,
                        "href": "/contact",
                      },
                      "ref": null,
                      "rendered": "Contact Us",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "children": "About",
                        "disabled": false,
                        "eventKey": 2,
                        "href": "/about",
                      },
                      "ref": null,
                      "rendered": "About",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <FormGroup
                        bsClass="form-group"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          id="textInbox"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Worker name"
                          type="text"
                        />
                      </FormGroup>,
                      " ",
                      <Link
                        replace={false}
                        to="/search"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                          id="myBtn"
                          onClick={[Function]}
                        >
                          Search
                        </Button>
                      </Link>,
                    ],
                    "componentClass": "div",
                    "pullLeft": true,
                    "pullRight": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "form-group",
                        "children": <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          id="textInbox"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Worker name"
                          type="text"
                        />,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-control",
                          "componentClass": "input",
                          "id": "textInbox",
                          "onChange": [Function],
                          "onKeyUp": [Function],
                          "placeholder": "Worker name",
                          "type": "text",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                          id="myBtn"
                          onClick={[Function]}
                        >
                          Search
                        </Button>,
                        "replace": false,
                        "to": "/search",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "block": false,
                          "bsClass": "btn",
                          "bsStyle": "default",
                          "children": "Search",
                          "disabled": false,
                          "id": "myBtn",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Search",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "nav",
                    "children": <NavItem
                      active={false}
                      disabled={false}
                      href="#"
                    >
                      <div>
                         
                        <WorkersLogo />
                         
                      </div>
                    </NavItem>,
                    "justified": false,
                    "pullLeft": false,
                    "pullRight": true,
                    "stacked": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "children": <div>
                         
                        <WorkersLogo />
                         
                      </div>,
                      "disabled": false,
                      "href": "#",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          " ",
                          <WorkersLogo />,
                          " ",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "handleWorkersButton": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        " ",
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/search",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/contact",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/about",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div>
          <Uncontrolled(Navbar)
            bsStyle="default"
            collapseOnSelect={true}
            inverse={true}
          >
            <NavbarHeader>
              <NavbarBrand>
                <a
                  href="/"
                >
                  HomerG
                </a>
              </NavbarBrand>
            </NavbarHeader>
            <NavbarCollapse>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={false}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={1}
                  href="/contact"
                >
                  Contact Us
                </NavItem>
                <NavItem
                  active={false}
                  disabled={false}
                  eventKey={2}
                  href="/about"
                >
                  About
                </NavItem>
              </Nav>
              <NavbarForm
                componentClass="div"
                pullLeft={true}
                pullRight={false}
              >
                <FormGroup
                  bsClass="form-group"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    id="textInbox"
                    onChange={[Function]}
                    onKeyUp={[Function]}
                    placeholder="Worker name"
                    type="text"
                  />
                </FormGroup>
                 
                <Link
                  replace={false}
                  to="/search"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    id="myBtn"
                    onClick={[Function]}
                  >
                    Search
                  </Button>
                </Link>
              </NavbarForm>
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={true}
                stacked={false}
              >
                <NavItem
                  active={false}
                  disabled={false}
                  href="#"
                >
                  <div>
                     
                    <WorkersLogo />
                     
                  </div>
                </NavItem>
              </Nav>
            </NavbarCollapse>
          </Uncontrolled(Navbar)>
          <Route
            component={[Function]}
            path="/search"
          />
          <Route
            component={[Function]}
            path="/contact"
          />
          <Route
            component={[Function]}
            path="/about"
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Uncontrolled(Navbar)
              bsStyle="default"
              collapseOnSelect={true}
              inverse={true}
            >
              <NavbarHeader>
                <NavbarBrand>
                  <a
                    href="/"
                  >
                    HomerG
                  </a>
                </NavbarBrand>
              </NavbarHeader>
              <NavbarCollapse>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={1}
                    href="/contact"
                  >
                    Contact Us
                  </NavItem>
                  <NavItem
                    active={false}
                    disabled={false}
                    eventKey={2}
                    href="/about"
                  >
                    About
                  </NavItem>
                </Nav>
                <NavbarForm
                  componentClass="div"
                  pullLeft={true}
                  pullRight={false}
                >
                  <FormGroup
                    bsClass="form-group"
                  >
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      id="textInbox"
                      onChange={[Function]}
                      onKeyUp={[Function]}
                      placeholder="Worker name"
                      type="text"
                    />
                  </FormGroup>
                   
                  <Link
                    replace={false}
                    to="/search"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="myBtn"
                      onClick={[Function]}
                    >
                      Search
                    </Button>
                  </Link>
                </NavbarForm>
                <Nav
                  bsClass="nav"
                  justified={false}
                  pullLeft={false}
                  pullRight={true}
                  stacked={false}
                >
                  <NavItem
                    active={false}
                    disabled={false}
                    href="#"
                  >
                    <div>
                       
                      <WorkersLogo />
                       
                    </div>
                  </NavItem>
                </Nav>
              </NavbarCollapse>
            </Uncontrolled(Navbar)>,
            <Route
              component={[Function]}
              path="/search"
            />,
            <Route
              component={[Function]}
              path="/contact"
            />,
            <Route
              component={[Function]}
              path="/about"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsStyle": "default",
              "children": Array [
                <NavbarHeader>
                  <NavbarBrand>
                    <a
                      href="/"
                    >
                      HomerG
                    </a>
                  </NavbarBrand>
                </NavbarHeader>,
                <NavbarCollapse>
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={false}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={1}
                      href="/contact"
                    >
                      Contact Us
                    </NavItem>
                    <NavItem
                      active={false}
                      disabled={false}
                      eventKey={2}
                      href="/about"
                    >
                      About
                    </NavItem>
                  </Nav>
                  <NavbarForm
                    componentClass="div"
                    pullLeft={true}
                    pullRight={false}
                  >
                    <FormGroup
                      bsClass="form-group"
                    >
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        id="textInbox"
                        onChange={[Function]}
                        onKeyUp={[Function]}
                        placeholder="Worker name"
                        type="text"
                      />
                    </FormGroup>
                     
                    <Link
                      replace={false}
                      to="/search"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        disabled={false}
                        id="myBtn"
                        onClick={[Function]}
                      >
                        Search
                      </Button>
                    </Link>
                  </NavbarForm>
                  <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={true}
                    stacked={false}
                  >
                    <NavItem
                      active={false}
                      disabled={false}
                      href="#"
                    >
                      <div>
                         
                        <WorkersLogo />
                         
                      </div>
                    </NavItem>
                  </Nav>
                </NavbarCollapse>,
              ],
              "collapseOnSelect": true,
              "inverse": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <NavbarBrand>
                    <a
                      href="/"
                    >
                      HomerG
                    </a>
                  </NavbarBrand>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <a
                      href="/"
                    >
                      HomerG
                    </a>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "HomerG",
                      "href": "/",
                    },
                    "ref": null,
                    "rendered": "HomerG",
                    "type": "a",
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Nav
                      bsClass="nav"
                      justified={false}
                      pullLeft={false}
                      pullRight={false}
                      stacked={false}
                    >
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={1}
                        href="/contact"
                      >
                        Contact Us
                      </NavItem>
                      <NavItem
                        active={false}
                        disabled={false}
                        eventKey={2}
                        href="/about"
                      >
                        About
                      </NavItem>
                    </Nav>,
                    <NavbarForm
                      componentClass="div"
                      pullLeft={true}
                      pullRight={false}
                    >
                      <FormGroup
                        bsClass="form-group"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          id="textInbox"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Worker name"
                          type="text"
                        />
                      </FormGroup>
                       
                      <Link
                        replace={false}
                        to="/search"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                          id="myBtn"
                          onClick={[Function]}
                        >
                          Search
                        </Button>
                      </Link>
                    </NavbarForm>,
                    <Nav
                      bsClass="nav"
                      justified={false}
                      pullLeft={false}
                      pullRight={true}
                      stacked={false}
                    >
                      <NavItem
                        active={false}
                        disabled={false}
                        href="#"
                      >
                        <div>
                           
                          <WorkersLogo />
                           
                        </div>
                      </NavItem>
                    </Nav>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "nav",
                      "children": Array [
                        <NavItem
                          active={false}
                          disabled={false}
                          eventKey={1}
                          href="/contact"
                        >
                          Contact Us
                        </NavItem>,
                        <NavItem
                          active={false}
                          disabled={false}
                          eventKey={2}
                          href="/about"
                        >
                          About
                        </NavItem>,
                      ],
                      "justified": false,
                      "pullLeft": false,
                      "pullRight": false,
                      "stacked": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "children": "Contact Us",
                          "disabled": false,
                          "eventKey": 1,
                          "href": "/contact",
                        },
                        "ref": null,
                        "rendered": "Contact Us",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "children": "About",
                          "disabled": false,
                          "eventKey": 2,
                          "href": "/about",
                        },
                        "ref": null,
                        "rendered": "About",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <FormGroup
                          bsClass="form-group"
                        >
                          <FormControl
                            bsClass="form-control"
                            componentClass="input"
                            id="textInbox"
                            onChange={[Function]}
                            onKeyUp={[Function]}
                            placeholder="Worker name"
                            type="text"
                          />
                        </FormGroup>,
                        " ",
                        <Link
                          replace={false}
                          to="/search"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                            id="myBtn"
                            onClick={[Function]}
                          >
                            Search
                          </Button>
                        </Link>,
                      ],
                      "componentClass": "div",
                      "pullLeft": true,
                      "pullRight": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-group",
                          "children": <FormControl
                            bsClass="form-control"
                            componentClass="input"
                            id="textInbox"
                            onChange={[Function]}
                            onKeyUp={[Function]}
                            placeholder="Worker name"
                            type="text"
                          />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "bsClass": "form-control",
                            "componentClass": "input",
                            "id": "textInbox",
                            "onChange": [Function],
                            "onKeyUp": [Function],
                            "placeholder": "Worker name",
                            "type": "text",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                            id="myBtn"
                            onClick={[Function]}
                          >
                            Search
                          </Button>,
                          "replace": false,
                          "to": "/search",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "active": false,
                            "block": false,
                            "bsClass": "btn",
                            "bsStyle": "default",
                            "children": "Search",
                            "disabled": false,
                            "id": "myBtn",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": "Search",
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "nav",
                      "children": <NavItem
                        active={false}
                        disabled={false}
                        href="#"
                      >
                        <div>
                           
                          <WorkersLogo />
                           
                        </div>
                      </NavItem>,
                      "justified": false,
                      "pullLeft": false,
                      "pullRight": true,
                      "stacked": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "children": <div>
                           
                          <WorkersLogo />
                           
                        </div>,
                        "disabled": false,
                        "href": "#",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            " ",
                            <WorkersLogo />,
                            " ",
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          " ",
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "handleWorkersButton": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          " ",
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/search",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/contact",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/about",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
